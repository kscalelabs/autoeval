name: eval sim
on:
  schedule:
    - cron: '0 0 * * 3'  # Runs every Wednesday at midnight UTC
  workflow_dispatch:  # Manually trigger the workflow

jobs:
  build-docker-run-eval-publish-video:
    name: build docker container and evaluate model
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # public registries are only available in us-east-1

      # TODO: Use roles instead of admin github-actions user
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: arn:aws:iam::339713082920:role/service-role/github-actions-codebuild
      #     aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: "kscalelabs/sim"

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: v6x3n6y1
          REPOSITORY: kscale-eval
          IMAGE_TAG: sim
        run: |
          cd docker 
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      - name: run codebuild
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: eval
          disable-source-override: true
          buildspec-override: |
            version: 0.2
            phases:
              install:
                commands:
                  - echo pulling docker image from ecr
                  - docker pull public.ecr.aws/v6x3n6y1/kscale-eval:sim
              build:
                commands:
                  - echo running docker container
                  - |
                    docker run \
                    -v $(pwd)/videos:/app/videos \
                    kscale-eval:sim \
                    python -m mani_skill.examples.demo_random_action \
                    -e PickCube-v1 \
                    --env_id="PickCube-v1" \
                    --render-mode="rgb_array" \
                    --record-dir="videos" \
                    --num_envs=1
              post_build:
                commands:
                  - echo eval completed on `date`
            artifacts:
              files:
                - videos/*.mp4
